#############################
# PostgreSQL Replication monitoring UserParameter's
# Author: https://github.com/vitovitolo


UserParameter=pgsql_replication.standby_starttime,sudo -u postgres psql -d postgres -tAc "SELECT case pg_is_in_recovery() when 't' then '1970-01-01 00:00:00' else (SELECT DATE_TRUNC('second',backend_start)::TIMESTAMP from pg_stat_replication limit 1 )end ;"
UserParameter=pgsql_replication.check,sudo -u postgres psql -d postgres -tAc "SELECT count(*) from pg_stat_replication where state='streaming' and ( sync_state ='async' or sync_state='sync');"
UserParameter=pgsql_replication.delay,sudo -u postgres psql -d postgres -tAc "SELECT case pg_is_in_recovery() when 't' then 0 else ( SELECT t2.master-t2.slave AS delay FROM (SELECT (SELECT ('x' || repeat('0', 8 - length(x)) || x)::bit(32)::bigint   FROM (SELECT substring(t1.mas_pos FROM 1 for position('/' in t1.mas_pos)-1)) AS x(x) )::bigint*255    +  (SELECT ('x' || repeat('0', 8 - length(x)) || x)::bit(32)::bigint     FROM (SELECT substring(t1.mas_pos from position('/' in t1.mas_pos)+1 for 10000)) AS x(x)  )::bigint  as master ,   (SELECT ('x' || repeat('0', 8 - length(x)) || x)::bit(32)::bigint     FROM (SELECT substring(t1.slv_pos from 1 for position('/' in t1.slv_pos)-1)) AS x(x) )::bigint*255    +   (SELECT ('x' || repeat('0', 8 - length(x)) || x)::bit(32)::bigint    FROM (SELECT substring(t1.slv_pos from position('/' in t1.slv_pos)+1 for 10000)) AS x(x)  )::bigint AS slave FROM (SELECT replay_location AS slv_pos,pg_current_xlog_location() AS mas_pos FROM pg_stat_replication) AS t1) AS t2 ) end ; "
